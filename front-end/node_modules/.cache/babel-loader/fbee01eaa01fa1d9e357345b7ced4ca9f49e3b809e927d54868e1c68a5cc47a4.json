{"ast":null,"code":"var _jsxFileName = \"/Users/srisaibodduluri/Desktop/EWA/Project/Project1/food-services-agent/front-end/src/pages/ChatAssistant.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ChatInput from './ChatInput'; // Input component for the chat\nimport './ChatAssistant.css'; // Add your styles here\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatAssistant() {\n  _s();\n  const [messages, setMessages] = useState([{\n    text: 'Welcome to our food service! How can I assist you today?',\n    sender: 'assistant'\n  }]);\n  const handleSendMessage = async newMessage => {\n    setMessages(prevMessages => [...prevMessages, {\n      text: newMessage,\n      sender: 'user'\n    }]);\n    try {\n      const response = await fetch('http://localhost:3030/api/chat/message', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          message: newMessage\n        })\n      });\n      const data = await response.json();\n\n      // Add assistant's response to the chat\n      setMessages(prevMessages => [...prevMessages, {\n        text: data.text,\n        sender: 'assistant'\n      }]);\n\n      // If menu recommendations are available\n      if (data.menuItems) {\n        setMessages(prevMessages => [...prevMessages, {\n          text: `Recommended Menu: ${data.menuItems.join(', ')}`,\n          sender: 'assistant'\n        }]);\n      }\n    } catch (error) {\n      console.error('Error sending message:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-assistant-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box\",\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.sender}`,\n        children: message.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ChatInput, {\n      onSendMessage: handleSendMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n_s(ChatAssistant, \"+GPDvaZyvg4eJpzEJ460hCWCh58=\");\n_c = ChatAssistant;\nexport default ChatAssistant;\nvar _c;\n$RefreshReg$(_c, \"ChatAssistant\");","map":{"version":3,"names":["React","useState","ChatInput","jsxDEV","_jsxDEV","ChatAssistant","_s","messages","setMessages","text","sender","handleSendMessage","newMessage","prevMessages","response","fetch","method","headers","body","JSON","stringify","message","data","json","menuItems","join","error","console","className","children","map","index","fileName","_jsxFileName","lineNumber","columnNumber","onSendMessage","_c","$RefreshReg$"],"sources":["/Users/srisaibodduluri/Desktop/EWA/Project/Project1/food-services-agent/front-end/src/pages/ChatAssistant.js"],"sourcesContent":["import React, { useState } from 'react';\nimport ChatInput from './ChatInput'; // Input component for the chat\nimport './ChatAssistant.css'; // Add your styles here\n\nfunction ChatAssistant() {\n    const [messages, setMessages] = useState([\n        { text: 'Welcome to our food service! How can I assist you today?', sender: 'assistant' }\n    ]);\n\n    const handleSendMessage = async (newMessage) => {\n        setMessages((prevMessages) => [...prevMessages, { text: newMessage, sender: 'user' }]);\n\n        try {\n            const response = await fetch('http://localhost:3030/api/chat/message', {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({ message: newMessage }),\n            });\n\n            const data = await response.json();\n\n            // Add assistant's response to the chat\n            setMessages((prevMessages) => [\n                ...prevMessages,\n                { text: data.text, sender: 'assistant' },\n            ]);\n\n            // If menu recommendations are available\n            if (data.menuItems) {\n                setMessages((prevMessages) => [\n                    ...prevMessages,\n                    { text: `Recommended Menu: ${data.menuItems.join(', ')}`, sender: 'assistant' },\n                ]);\n            }\n\n        } catch (error) {\n            console.error('Error sending message:', error);\n        }\n    };\n\n    return (\n        <div className=\"chat-assistant-container\">\n            <div className=\"chat-box\">\n                {messages.map((message, index) => (\n                    <div key={index} className={`message ${message.sender}`}>\n                        {message.text}\n                    </div>\n                ))}\n            </div>\n            <ChatInput onSendMessage={handleSendMessage} />\n        </div>\n    );\n}\n\nexport default ChatAssistant;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,SAAS,MAAM,aAAa,CAAC,CAAC;AACrC,OAAO,qBAAqB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE9B,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,CACrC;IAAEQ,IAAI,EAAE,0DAA0D;IAAEC,MAAM,EAAE;EAAY,CAAC,CAC5F,CAAC;EAEF,MAAMC,iBAAiB,GAAG,MAAOC,UAAU,IAAK;IAC5CJ,WAAW,CAAEK,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAE;MAAEJ,IAAI,EAAEG,UAAU;MAAEF,MAAM,EAAE;IAAO,CAAC,CAAC,CAAC;IAEtF,IAAI;MACA,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,wCAAwC,EAAE;QACnEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEC,OAAO,EAAET;QAAW,CAAC;MAChD,CAAC,CAAC;MAEF,MAAMU,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;;MAElC;MACAf,WAAW,CAAEK,YAAY,IAAK,CAC1B,GAAGA,YAAY,EACf;QAAEJ,IAAI,EAAEa,IAAI,CAACb,IAAI;QAAEC,MAAM,EAAE;MAAY,CAAC,CAC3C,CAAC;;MAEF;MACA,IAAIY,IAAI,CAACE,SAAS,EAAE;QAChBhB,WAAW,CAAEK,YAAY,IAAK,CAC1B,GAAGA,YAAY,EACf;UAAEJ,IAAI,EAAE,qBAAqBa,IAAI,CAACE,SAAS,CAACC,IAAI,CAAC,IAAI,CAAC,EAAE;UAAEf,MAAM,EAAE;QAAY,CAAC,CAClF,CAAC;MACN;IAEJ,CAAC,CAAC,OAAOgB,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAClD;EACJ,CAAC;EAED,oBACItB,OAAA;IAAKwB,SAAS,EAAC,0BAA0B;IAAAC,QAAA,gBACrCzB,OAAA;MAAKwB,SAAS,EAAC,UAAU;MAAAC,QAAA,EACpBtB,QAAQ,CAACuB,GAAG,CAAC,CAACT,OAAO,EAAEU,KAAK,kBACzB3B,OAAA;QAAiBwB,SAAS,EAAE,WAAWP,OAAO,CAACX,MAAM,EAAG;QAAAmB,QAAA,EACnDR,OAAO,CAACZ;MAAI,GADPsB,KAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eACN/B,OAAA,CAACF,SAAS;MAACkC,aAAa,EAAEzB;IAAkB;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9C,CAAC;AAEd;AAAC7B,EAAA,CAhDQD,aAAa;AAAAgC,EAAA,GAAbhC,aAAa;AAkDtB,eAAeA,aAAa;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}