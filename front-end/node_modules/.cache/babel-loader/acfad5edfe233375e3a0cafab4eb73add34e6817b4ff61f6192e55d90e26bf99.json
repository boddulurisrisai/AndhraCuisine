{"ast":null,"code":"var _jsxFileName = \"/Users/srisaibodduluri/Desktop/EWA/Project/Project1/food-services-agent/front-end/src/pages/ChatAssistant.js\",\n  _s = $RefreshSig$();\n// src/components/ChatAssistant.js\n\nimport React, { useState } from 'react';\nimport ChatInput from './ChatInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatAssistant() {\n  _s();\n  const [messages, setMessages] = useState([{\n    text: 'Hi there! How can I help you today?',\n    sender: 'assistant'\n  }]);\n  const handleSendMessage = async newMessage => {\n    setMessages([...messages, {\n      text: newMessage,\n      sender: 'user'\n    }]);\n\n    // Send message to the backend and await response\n    try {\n      const response = await fetch('http://localhost:3030/api/chat/message', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          message: newMessage\n        })\n      });\n      const data = await response.json();\n      setMessages(prevMessages => [...prevMessages, {\n        text: data.text,\n        sender: 'assistant'\n      }]);\n    } catch (error) {\n      console.error('Error sending message:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-assistant-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box\",\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.sender}`,\n        children: message.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatInput, {\n      onSendMessage: handleSendMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatAssistant, \"tpMLSU3dFKazGi4hPJ5u8VvHIiM=\");\n_c = ChatAssistant;\nexport default ChatAssistant;\nvar _c;\n$RefreshReg$(_c, \"ChatAssistant\");","map":{"version":3,"names":["React","useState","ChatInput","jsxDEV","_jsxDEV","ChatAssistant","_s","messages","setMessages","text","sender","handleSendMessage","newMessage","response","fetch","method","headers","body","JSON","stringify","message","data","json","prevMessages","error","console","className","children","map","index","fileName","_jsxFileName","lineNumber","columnNumber","onSendMessage","_c","$RefreshReg$"],"sources":["/Users/srisaibodduluri/Desktop/EWA/Project/Project1/food-services-agent/front-end/src/pages/ChatAssistant.js"],"sourcesContent":["// src/components/ChatAssistant.js\n\nimport React, { useState } from 'react';\nimport ChatInput from './ChatInput';\n\nfunction ChatAssistant() {\n  const [messages, setMessages] = useState([\n    { text: 'Hi there! How can I help you today?', sender: 'assistant' }\n  ]);\n\n  const handleSendMessage = async (newMessage) => {\n    setMessages([...messages, { text: newMessage, sender: 'user' }]);\n  \n    // Send message to the backend and await response\n    try {\n      const response = await fetch('http://localhost:3030/api/chat/message', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ message: newMessage }),\n      });\n  \n      const data = await response.json();\n      setMessages((prevMessages) => [\n        ...prevMessages,\n        { text: data.text, sender: 'assistant' },\n      ]);\n    } catch (error) {\n      console.error('Error sending message:', error);\n    }\n  };\n  \n  return (\n    <div className=\"chat-assistant-container\">\n      <div className=\"chat-box\">\n        {messages.map((message, index) => (\n          <div key={index} className={`message ${message.sender}`}>\n            {message.text}\n          </div>\n        ))}\n      </div>\n      <ChatInput onSendMessage={handleSendMessage} />\n    </div>\n  );\n}\n\nexport default ChatAssistant;\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,CACvC;IAAEQ,IAAI,EAAE,qCAAqC;IAAEC,MAAM,EAAE;EAAY,CAAC,CACrE,CAAC;EAEF,MAAMC,iBAAiB,GAAG,MAAOC,UAAU,IAAK;IAC9CJ,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAE;MAAEE,IAAI,EAAEG,UAAU;MAAEF,MAAM,EAAE;IAAO,CAAC,CAAC,CAAC;;IAEhE;IACA,IAAI;MACF,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAC,wCAAwC,EAAE;QACrEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEC,OAAO,EAAER;QAAW,CAAC;MAC9C,CAAC,CAAC;MAEF,MAAMS,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;MAClCd,WAAW,CAAEe,YAAY,IAAK,CAC5B,GAAGA,YAAY,EACf;QAAEd,IAAI,EAAEY,IAAI,CAACZ,IAAI;QAAEC,MAAM,EAAE;MAAY,CAAC,CACzC,CAAC;IACJ,CAAC,CAAC,OAAOc,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD;EACF,CAAC;EAED,oBACEpB,OAAA;IAAKsB,SAAS,EAAC,0BAA0B;IAAAC,QAAA,gBACvCvB,OAAA;MAAKsB,SAAS,EAAC,UAAU;MAAAC,QAAA,EACtBpB,QAAQ,CAACqB,GAAG,CAAC,CAACR,OAAO,EAAES,KAAK,kBAC3BzB,OAAA;QAAiBsB,SAAS,EAAE,WAAWN,OAAO,CAACV,MAAM,EAAG;QAAAiB,QAAA,EACrDP,OAAO,CAACX;MAAI,GADLoB,KAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACN7B,OAAA,CAACF,SAAS;MAACgC,aAAa,EAAEvB;IAAkB;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5C,CAAC;AAEV;AAAC3B,EAAA,CAtCQD,aAAa;AAAA8B,EAAA,GAAb9B,aAAa;AAwCtB,eAAeA,aAAa;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}